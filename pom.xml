<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ch.cern</groupId>
    <artifactId>cx3d</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <testResourcePath>${project.basedir}/src/test/resources</testResourcePath>
        <mainResourcePath>${project.basedir}/src/main/resources</mainResourcePath>
        <updateSimStateReferenceFiles>false</updateSimStateReferenceFiles>
    </properties>

    <build>

        <testResources>
            <testResource>
                <directory>${testResourcePath}</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>
            <!-- clean jni files-->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.6.1</version>
                <configuration>
                    <filesets>
                        <!-- remove compiled jni libraries -->
                        <fileset>
                            <directory>${mainResourcePath}</directory>
                            <includes>
                                <include>**/*.so</include>
                                <include>**/*.jnilib</include>
                                <include>**/*.dll</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <!-- remove generated java proxy classes -->
                        <fileset>
                            <directory>${project.basedir}/src/main/java/ini/cx3d/swig/</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <!-- remove generated cxx wrappers -->
                        <fileset>
                            <directory>${project.basedir}/src/main/cpp/swig/</directory>
                            <includes>
                                <include>*_wrap.cxx</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <!-- remove generated cmake files -->
                        <fileset>
                            <directory>${project.basedir}/cmake/</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                            <excludes>
                                <exclude>CMakeLists.txt</exclude>
                                <exclude>build.sh</exclude>
                            </excludes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!-- compile jni library and generate java proxies -->
            <plugin>
                <artifactId>exec-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <executions>
                    <execution>
                        <id>cmake build</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <workingDirectory>${project.basedir}/cmake/</workingDirectory>
                            <executable>./build.sh</executable>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- compile java -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!-- test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.16</version>
                <configuration>
                    <!-- set java.library.path to be able to load native libraries -->
                    <argLine>-Djava.library.path=${basedir}/src/main/resources/</argLine>
                    <!-- execute tests sequentially and in separate jvm -->
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                    <systemPropertyVariables>
                        <updateSimStateReferenceFiles>${updateSimStateReferenceFiles}</updateSimStateReferenceFiles>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <!-- Jacoco Code Coverage -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.0.201403182114</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <!-- object serialization -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.3.1</version>
        </dependency>
    </dependencies>
</project>